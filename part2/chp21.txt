1. What library did we use in this chapter to work with multi-threading?
A. AllegroThreads B. pthread C. allegThreads D. BerkeleyThreads
2. Which company maintains the multi-threading library for Windows 
systems used in this chapter?
A.	Red Hat B. Microsoft C. Sears D. Borland
3. Which function will terminate a thread?
A. threadkill B. unloadthread C. pthread_exit D. threadTerminate
4. What type of parameter does a thread callback function require?
A. int thread_id B. void *data C. THREAD *thread_data D. thread *data
5. What is the most common method of keeping a thread running inside 
a thread callback function?
A.	thread callback B. mutex C.	thread function D. while loop
6. What is a process that runs within the memory space of a single program 
but is executed separately from that program?
A. mutex B. process C. thread D. interrupt
7. What helps protect data by locking it inside a single thread, preventing 
that data from being used by another thread until it is unlocked?
A. mutex B. process C. thread D. interrupt
8. What does pthread stand for?
A.	Protected Thread 
B.	Public Thread 
C.	POSIX Thread 
D. Purple Thread
9. What is the name of the function used to create a new thread?
A. create_posix_thread 
B. pthread_create 
C. install_thread 
D. thread_callback
10. What is the name of the function that locks a mutex?
A. lock_pthread_mutex 
B. lock_mutex 
C. pthread_lock_mutex 
D. pthread_mutex_lock
 
